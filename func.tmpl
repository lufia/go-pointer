package pointer

// {{.Name}} returns a pointer to {{.Type}} that is initialized with v.
func {{.Name}}(v {{.Type}}) *{{.Type}} {
	return &v
}

// {{.Name}}Slice returns a slice of pointer to {{.Type}}.
func {{.Name}}Slice(a ...{{.Type}}) []*{{.Type}} {
	p := make([]*{{.Type}}, len(a))
	for i, v := range a {
		v := v
		p[i] = &v
	}
	return p
}

// {{.Name}}Value returns a value referenced by p. If p is nil, it will returns zero value of {{.Type}}.
func {{.Name}}Value(p *{{.Type}}) {{.Type}} {
	if p != nil {
		return *p
	}
	var v {{.Type}}
	return v
}
